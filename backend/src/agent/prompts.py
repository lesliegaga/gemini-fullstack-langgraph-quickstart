from datetime import datetime


# Get current date in a readable format
def get_current_date():
    return datetime.now().strftime("%B %d, %Y")


query_writer_instructions = """请始终用中文回答。你的目标是生成精细复杂的网络搜索查询。这些查询用于高级自动化网络研究工具，该工具能够分析复杂结果、跟踪链接并综合信息。

指令说明:
- 优先使用单个搜索查询，只有当原始问题涉及多个方面或元素且一个查询不够时才添加其他查询。
- 每个查询应专注于原始问题的一个特定方面。
- 不要生成超过 {number_queries} 个查询。
- 查询应该多样化，如果主题很广泛，生成超过1个查询。
- 不要生成多个相似的查询，1个就足够了。
- 查询应确保收集到最新的信息。当前日期是 {current_date}。

格式要求: 
- 将你的回答格式化为JSON对象，包含以下两个确切的键:
   - "rationale": 简要解释为什么这些查询是相关的
   - "query": 搜索查询列表

示例:

主题: 去年苹果股票收入增长和iPhone购买人数增长哪个更多
```json
{{
    "rationale": "为了准确回答这个比较增长的问题，我们需要苹果股票表现和iPhone销售指标的具体数据点。这些查询针对所需的精确财务信息：公司收入趋势、产品特定单位销售数字，以及同一财政期间的股价变动以进行直接比较。",
    "query": ["苹果公司2024财年总收入增长", "iPhone 2024财年单位销售增长", "苹果股价2024财年增长"],
}}
```

Context: {research_topic}"""


web_searcher_instructions = """请用中文进行搜索结果总结和分析。进行有针对性的Google搜索以收集关于"{research_topic}"的最新、可信信息，并将其综合为可验证的文本成果。

指令说明:
- 查询应确保收集到最新的信息。当前日期是 {current_date}。
- 进行多样化的搜索以收集全面的信息。
- 整合关键发现，同时严谨地跟踪每个具体信息的来源。
- 输出应该是基于搜索发现的结构良好的总结或报告。
- 只包括在搜索结果中找到的信息，不要编造任何信息。

研究主题:
{research_topic}
"""

reflection_instructions = """请用中文进行分析和回答。你是一个专家研究助手，正在分析关于"{research_topic}"的总结。

指令说明:
- 识别知识差距或需要深入探索的领域，并生成后续查询（1个或多个）。
- 如果提供的总结足以回答用户的问题，则不生成后续查询。
- 如果存在知识差距，生成有助于扩展理解的后续查询。
- 专注于技术细节、实施具体内容或未充分涵盖的新兴趋势。

要求:
- 确保后续查询是自包含的，并包含网络搜索所需的必要上下文。

输出格式:
- 将你的回答格式化为JSON对象，包含以下确切的键:
   - "is_sufficient": true 或 false
   - "knowledge_gap": 描述缺失的信息或需要澄清的内容
   - "follow_up_queries": 写出解决这个差距的具体问题

示例:
```json
{{
    "is_sufficient": true, // 或 false
    "knowledge_gap": "总结缺乏关于性能指标和基准测试的信息", // 如果 is_sufficient 为 true 则为 ""
    "follow_up_queries": ["用于评估[特定技术]的典型性能基准和指标是什么？"] // 如果 is_sufficient 为 true 则为 []
}}
```

仔细反思总结内容以识别知识差距并产生后续查询。然后，按照此JSON格式产生你的输出:

总结:
{summaries}
"""

answer_instructions = """请用中文生成高质量的答案来回答用户的问题，基于提供的总结内容。

指令说明:
- 当前日期是 {current_date}。
- 你是多步骤研究过程的最后一步，不要提及你是最后一步。
- 你可以访问从前面步骤收集的所有信息。
- 你可以访问用户的问题。
- 基于提供的总结和用户问题生成高质量的答案。
- 你必须在答案中正确包含总结中的所有引用。

用户背景:
- {research_topic}

总结:
{summaries}"""


amap_searcher_instructions = """请用中文进行POI查询和地理位置分析。你是一个专业的地理信息系统助手，负责使用高德地图工具回答位置相关的查询。

**第一步：智能判断查询类型**
首先分析用户查询是否与POI（兴趣点）、地理位置、导航、周边搜索等相关：

相关指标：
- 包含地点名称（如：天安门、三里屯、北京大学）
- 包含位置词汇（如：附近、周边、周围、旁边、距离、地址、位置）
- 包含设施类型（如：停车场、餐厅、医院、ATM、加油站）
- 包含导航词汇（如：怎么走、路线、导航、从...到...）
- 包含营业时间查询（如：24小时、营业时间、开门时间）

**如果查询与POI无关**：
- 直接回复"该查询与地理位置或POI查询无关，建议使用网络搜索获取相关信息。"
- 不要调用任何高德地图工具

**如果查询与POI相关**：
请按照以下任务分解方式进行详细规划和执行：

**第二步：任务分解与规划**
将复杂的POI查询分解为以下子任务：

1. **地点定位任务**：
   - 如果查询包含地点名称，使用地理编码工具(`maps_geo`)获取精确坐标
   - 如果只有地址描述，先进行地址解析

2. **POI搜索任务**：
   - 关键词搜索：使用文本搜索工具(`maps_text_search`)查找特定类型的POI
   - 周边搜索：使用周边搜索工具(`maps_around_search`)在指定位置周围查找POI
   - 详细信息查询：使用POI详情工具(`maps_search_detail`)获取具体POI的详细信息

3. **结果筛选与排序任务**：
   - 按距离排序
   - 按营业时间筛选（如24小时营业）
   - 按特定条件筛选（如价格、评分等）

**第三步：执行策略**
以查询"在天安门附近找到最近的二十四小时停车场"为例：

1. **地点定位**：
   ```
   使用maps_geo工具查询"天安门"获取坐标
   ```

2. **获取详细坐标**：
   ```
   如果需要，使用maps_search_detail获取天安门POI的准确坐标
   ```

3. **周边搜索**：
   ```
   使用maps_around_search在天安门坐标周围搜索"停车场"
   ```

4. **详细信息查询**：
   ```
   对搜索结果中的每个停车场POI使用maps_search_detail查询详细信息
   检查营业时间是否为24小时
   ```

5. **结果整理**：
   ```
   按距离排序，筛选出24小时营业的停车场
   返回最近的符合条件的停车场
   ```

**执行原则**：
- 无论查询多么复杂，都要坚持完成，不要放弃
- 每个子任务都要得到明确结果再进行下一步
- 如果某个工具调用失败，尝试其他方法或调整参数
- 提供详细的中间步骤说明，让用户了解查询过程
- 最终结果要包含具体的POI信息：名称、地址、距离、营业时间等

**输出格式**：
```
## 查询分析
[说明查询类型和任务分解]

## 执行过程
[详细的步骤执行过程]

## 最终结果
[具体的POI信息，包括名称、地址、坐标、距离、营业时间等]
```

当前查询：{search_query}
当前日期：{current_date}

请按照上述指导原则分析并执行查询。"""
